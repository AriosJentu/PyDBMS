Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BETWEEN
    FLOOR_DIV
    GREATER_THAN
    GREATER_THAN_OR_EQUAL
    IN
    LESS_THAN
    LESS_THAN_OR_EQUAL
    LIKE
    MINUS
    MUL
    NAND
    NOR
    NOT
    NOT_EQUAL
    OR
    PERCENT
    PLUS
    POWER
    TRUE_DIV
    WHERE

Grammar

Rule 0     S' -> start
Rule 1     start -> create
Rule 2     start -> show
Rule 3     start -> select
Rule 4     start -> insert
Rule 5     start -> update
Rule 6     start -> delete
Rule 7     create -> CREATE create_body
Rule 8     create_body -> TABLE NAME LPAREN values RPAREN
Rule 9     values -> NAME type
Rule 10    values -> values COMMA NAME type
Rule 11    show -> SHOW CREATE TABLE NAME
Rule 12    select -> SELECT select_body
Rule 13    select_body -> fields FROM NAME
Rule 14    select_body -> LPAREN fields RPAREN FROM NAME
Rule 15    insert -> INSERT insert_body
Rule 16    insert_body -> INTO NAME LPAREN fields RPAREN
Rule 17    insert_body -> INTO NAME VALUES LPAREN fields RPAREN
Rule 18    update -> UPDATE update_body
Rule 19    delete -> DELETE FROM NAME
Rule 20    update_body -> NAME SET expression
Rule 21    expression -> field operator value
Rule 22    expression -> expression COMMA field operator value
Rule 23    fields -> NAME
Rule 24    fields -> fields COMMA NAME
Rule 25    field -> NAME
Rule 26    value -> NAME
Rule 27    operator -> EQUAL
Rule 28    type -> int
Rule 29    type -> str
Rule 30    type -> bol

Terminals, with rules where they appear

AND                  : 
BETWEEN              : 
COMMA                : 10 22 24
CREATE               : 7 11
DELETE               : 19
EQUAL                : 27
FLOOR_DIV            : 
FROM                 : 13 14 19
GREATER_THAN         : 
GREATER_THAN_OR_EQUAL : 
IN                   : 
INSERT               : 15
INTO                 : 16 17
LESS_THAN            : 
LESS_THAN_OR_EQUAL   : 
LIKE                 : 
LPAREN               : 8 14 16 17
MINUS                : 
MUL                  : 
NAME                 : 8 9 10 11 13 14 16 17 19 20 23 24 25 26
NAND                 : 
NOR                  : 
NOT                  : 
NOT_EQUAL            : 
OR                   : 
PERCENT              : 
PLUS                 : 
POWER                : 
RPAREN               : 8 14 16 17
SELECT               : 12
SET                  : 20
SHOW                 : 11
TABLE                : 8 11
TRUE_DIV             : 
UPDATE               : 18
VALUES               : 17
WHERE                : 
bol                  : 30
error                : 
int                  : 28
str                  : 29

Nonterminals, with rules where they appear

create               : 1
create_body          : 7
delete               : 6
expression           : 20 22
field                : 21 22
fields               : 13 14 16 17 24
insert               : 4
insert_body          : 15
operator             : 21 22
select               : 3
select_body          : 12
show                 : 2
start                : 0
type                 : 9 10
update               : 5
update_body          : 18
value                : 21 22
values               : 8 10

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . create
    (2) start -> . show
    (3) start -> . select
    (4) start -> . insert
    (5) start -> . update
    (6) start -> . delete
    (7) create -> . CREATE create_body
    (11) show -> . SHOW CREATE TABLE NAME
    (12) select -> . SELECT select_body
    (15) insert -> . INSERT insert_body
    (18) update -> . UPDATE update_body
    (19) delete -> . DELETE FROM NAME

    CREATE          shift and go to state 8
    SHOW            shift and go to state 9
    SELECT          shift and go to state 10
    INSERT          shift and go to state 11
    UPDATE          shift and go to state 12
    DELETE          shift and go to state 13

    start                          shift and go to state 1
    create                         shift and go to state 2
    show                           shift and go to state 3
    select                         shift and go to state 4
    insert                         shift and go to state 5
    update                         shift and go to state 6
    delete                         shift and go to state 7

state 1

    (0) S' -> start .



state 2

    (1) start -> create .

    $end            reduce using rule 1 (start -> create .)


state 3

    (2) start -> show .

    $end            reduce using rule 2 (start -> show .)


state 4

    (3) start -> select .

    $end            reduce using rule 3 (start -> select .)


state 5

    (4) start -> insert .

    $end            reduce using rule 4 (start -> insert .)


state 6

    (5) start -> update .

    $end            reduce using rule 5 (start -> update .)


state 7

    (6) start -> delete .

    $end            reduce using rule 6 (start -> delete .)


state 8

    (7) create -> CREATE . create_body
    (8) create_body -> . TABLE NAME LPAREN values RPAREN

    TABLE           shift and go to state 15

    create_body                    shift and go to state 14

state 9

    (11) show -> SHOW . CREATE TABLE NAME

    CREATE          shift and go to state 16


state 10

    (12) select -> SELECT . select_body
    (13) select_body -> . fields FROM NAME
    (14) select_body -> . LPAREN fields RPAREN FROM NAME
    (23) fields -> . NAME
    (24) fields -> . fields COMMA NAME

    LPAREN          shift and go to state 20
    NAME            shift and go to state 19

    select_body                    shift and go to state 17
    fields                         shift and go to state 18

state 11

    (15) insert -> INSERT . insert_body
    (16) insert_body -> . INTO NAME LPAREN fields RPAREN
    (17) insert_body -> . INTO NAME VALUES LPAREN fields RPAREN

    INTO            shift and go to state 22

    insert_body                    shift and go to state 21

state 12

    (18) update -> UPDATE . update_body
    (20) update_body -> . NAME SET expression

    NAME            shift and go to state 24

    update_body                    shift and go to state 23

state 13

    (19) delete -> DELETE . FROM NAME

    FROM            shift and go to state 25


state 14

    (7) create -> CREATE create_body .

    $end            reduce using rule 7 (create -> CREATE create_body .)


state 15

    (8) create_body -> TABLE . NAME LPAREN values RPAREN

    NAME            shift and go to state 26


state 16

    (11) show -> SHOW CREATE . TABLE NAME

    TABLE           shift and go to state 27


state 17

    (12) select -> SELECT select_body .

    $end            reduce using rule 12 (select -> SELECT select_body .)


state 18

    (13) select_body -> fields . FROM NAME
    (24) fields -> fields . COMMA NAME

    FROM            shift and go to state 28
    COMMA           shift and go to state 29


state 19

    (23) fields -> NAME .

    FROM            reduce using rule 23 (fields -> NAME .)
    COMMA           reduce using rule 23 (fields -> NAME .)
    RPAREN          reduce using rule 23 (fields -> NAME .)


state 20

    (14) select_body -> LPAREN . fields RPAREN FROM NAME
    (23) fields -> . NAME
    (24) fields -> . fields COMMA NAME

    NAME            shift and go to state 19

    fields                         shift and go to state 30

state 21

    (15) insert -> INSERT insert_body .

    $end            reduce using rule 15 (insert -> INSERT insert_body .)


state 22

    (16) insert_body -> INTO . NAME LPAREN fields RPAREN
    (17) insert_body -> INTO . NAME VALUES LPAREN fields RPAREN

    NAME            shift and go to state 31


state 23

    (18) update -> UPDATE update_body .

    $end            reduce using rule 18 (update -> UPDATE update_body .)


state 24

    (20) update_body -> NAME . SET expression

    SET             shift and go to state 32


state 25

    (19) delete -> DELETE FROM . NAME

    NAME            shift and go to state 33


state 26

    (8) create_body -> TABLE NAME . LPAREN values RPAREN

    LPAREN          shift and go to state 34


state 27

    (11) show -> SHOW CREATE TABLE . NAME

    NAME            shift and go to state 35


state 28

    (13) select_body -> fields FROM . NAME

    NAME            shift and go to state 36


state 29

    (24) fields -> fields COMMA . NAME

    NAME            shift and go to state 37


state 30

    (14) select_body -> LPAREN fields . RPAREN FROM NAME
    (24) fields -> fields . COMMA NAME

    RPAREN          shift and go to state 38
    COMMA           shift and go to state 29


state 31

    (16) insert_body -> INTO NAME . LPAREN fields RPAREN
    (17) insert_body -> INTO NAME . VALUES LPAREN fields RPAREN

    LPAREN          shift and go to state 39
    VALUES          shift and go to state 40


state 32

    (20) update_body -> NAME SET . expression
    (21) expression -> . field operator value
    (22) expression -> . expression COMMA field operator value
    (25) field -> . NAME

    NAME            shift and go to state 41

    expression                     shift and go to state 42
    field                          shift and go to state 43

state 33

    (19) delete -> DELETE FROM NAME .

    $end            reduce using rule 19 (delete -> DELETE FROM NAME .)


state 34

    (8) create_body -> TABLE NAME LPAREN . values RPAREN
    (9) values -> . NAME type
    (10) values -> . values COMMA NAME type

    NAME            shift and go to state 44

    values                         shift and go to state 45

state 35

    (11) show -> SHOW CREATE TABLE NAME .

    $end            reduce using rule 11 (show -> SHOW CREATE TABLE NAME .)


state 36

    (13) select_body -> fields FROM NAME .

    $end            reduce using rule 13 (select_body -> fields FROM NAME .)


state 37

    (24) fields -> fields COMMA NAME .

    FROM            reduce using rule 24 (fields -> fields COMMA NAME .)
    COMMA           reduce using rule 24 (fields -> fields COMMA NAME .)
    RPAREN          reduce using rule 24 (fields -> fields COMMA NAME .)


state 38

    (14) select_body -> LPAREN fields RPAREN . FROM NAME

    FROM            shift and go to state 46


state 39

    (16) insert_body -> INTO NAME LPAREN . fields RPAREN
    (23) fields -> . NAME
    (24) fields -> . fields COMMA NAME

    NAME            shift and go to state 19

    fields                         shift and go to state 47

state 40

    (17) insert_body -> INTO NAME VALUES . LPAREN fields RPAREN

    LPAREN          shift and go to state 48


state 41

    (25) field -> NAME .

    EQUAL           reduce using rule 25 (field -> NAME .)


state 42

    (20) update_body -> NAME SET expression .
    (22) expression -> expression . COMMA field operator value

    $end            reduce using rule 20 (update_body -> NAME SET expression .)
    COMMA           shift and go to state 49


state 43

    (21) expression -> field . operator value
    (27) operator -> . EQUAL

    EQUAL           shift and go to state 51

    operator                       shift and go to state 50

state 44

    (9) values -> NAME . type
    (28) type -> . int
    (29) type -> . str
    (30) type -> . bol

    int             shift and go to state 53
    str             shift and go to state 54
    bol             shift and go to state 55

    type                           shift and go to state 52

state 45

    (8) create_body -> TABLE NAME LPAREN values . RPAREN
    (10) values -> values . COMMA NAME type

    RPAREN          shift and go to state 56
    COMMA           shift and go to state 57


state 46

    (14) select_body -> LPAREN fields RPAREN FROM . NAME

    NAME            shift and go to state 58


state 47

    (16) insert_body -> INTO NAME LPAREN fields . RPAREN
    (24) fields -> fields . COMMA NAME

    RPAREN          shift and go to state 59
    COMMA           shift and go to state 29


state 48

    (17) insert_body -> INTO NAME VALUES LPAREN . fields RPAREN
    (23) fields -> . NAME
    (24) fields -> . fields COMMA NAME

    NAME            shift and go to state 19

    fields                         shift and go to state 60

state 49

    (22) expression -> expression COMMA . field operator value
    (25) field -> . NAME

    NAME            shift and go to state 41

    field                          shift and go to state 61

state 50

    (21) expression -> field operator . value
    (26) value -> . NAME

    NAME            shift and go to state 63

    value                          shift and go to state 62

state 51

    (27) operator -> EQUAL .

    NAME            reduce using rule 27 (operator -> EQUAL .)


state 52

    (9) values -> NAME type .

    RPAREN          reduce using rule 9 (values -> NAME type .)
    COMMA           reduce using rule 9 (values -> NAME type .)


state 53

    (28) type -> int .

    RPAREN          reduce using rule 28 (type -> int .)
    COMMA           reduce using rule 28 (type -> int .)


state 54

    (29) type -> str .

    RPAREN          reduce using rule 29 (type -> str .)
    COMMA           reduce using rule 29 (type -> str .)


state 55

    (30) type -> bol .

    RPAREN          reduce using rule 30 (type -> bol .)
    COMMA           reduce using rule 30 (type -> bol .)


state 56

    (8) create_body -> TABLE NAME LPAREN values RPAREN .

    $end            reduce using rule 8 (create_body -> TABLE NAME LPAREN values RPAREN .)


state 57

    (10) values -> values COMMA . NAME type

    NAME            shift and go to state 64


state 58

    (14) select_body -> LPAREN fields RPAREN FROM NAME .

    $end            reduce using rule 14 (select_body -> LPAREN fields RPAREN FROM NAME .)


state 59

    (16) insert_body -> INTO NAME LPAREN fields RPAREN .

    $end            reduce using rule 16 (insert_body -> INTO NAME LPAREN fields RPAREN .)


state 60

    (17) insert_body -> INTO NAME VALUES LPAREN fields . RPAREN
    (24) fields -> fields . COMMA NAME

    RPAREN          shift and go to state 65
    COMMA           shift and go to state 29


state 61

    (22) expression -> expression COMMA field . operator value
    (27) operator -> . EQUAL

    EQUAL           shift and go to state 51

    operator                       shift and go to state 66

state 62

    (21) expression -> field operator value .

    COMMA           reduce using rule 21 (expression -> field operator value .)
    $end            reduce using rule 21 (expression -> field operator value .)


state 63

    (26) value -> NAME .

    COMMA           reduce using rule 26 (value -> NAME .)
    $end            reduce using rule 26 (value -> NAME .)


state 64

    (10) values -> values COMMA NAME . type
    (28) type -> . int
    (29) type -> . str
    (30) type -> . bol

    int             shift and go to state 53
    str             shift and go to state 54
    bol             shift and go to state 55

    type                           shift and go to state 67

state 65

    (17) insert_body -> INTO NAME VALUES LPAREN fields RPAREN .

    $end            reduce using rule 17 (insert_body -> INTO NAME VALUES LPAREN fields RPAREN .)


state 66

    (22) expression -> expression COMMA field operator . value
    (26) value -> . NAME

    NAME            shift and go to state 63

    value                          shift and go to state 68

state 67

    (10) values -> values COMMA NAME type .

    RPAREN          reduce using rule 10 (values -> values COMMA NAME type .)
    COMMA           reduce using rule 10 (values -> values COMMA NAME type .)


state 68

    (22) expression -> expression COMMA field operator value .

    COMMA           reduce using rule 22 (expression -> expression COMMA field operator value .)
    $end            reduce using rule 22 (expression -> expression COMMA field operator value .)

